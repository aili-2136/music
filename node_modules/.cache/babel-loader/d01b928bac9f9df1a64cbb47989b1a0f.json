{"remainingRequest":"D:\\Less\\小罗音乐2.0\\node_modules\\thread-loader\\dist\\cjs.js!D:\\Less\\小罗音乐2.0\\node_modules\\babel-loader\\lib\\index.js!D:\\Less\\小罗音乐2.0\\src\\plugins\\request.js","dependencies":[{"path":"D:\\Less\\小罗音乐2.0\\src\\plugins\\request.js","mtime":1680168371743},{"path":"D:\\Less\\小罗音乐2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662623268261},{"path":"D:\\Less\\小罗音乐2.0\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1662623267592},{"path":"D:\\Less\\小罗音乐2.0\\node_modules\\babel-loader\\lib\\index.js","mtime":1662623271902}],"contextDependencies":[],"result":["import axios from 'axios';\nvar request = axios.create({\n  baseURL: 'http://39.106.23.37:3000/',\n  withCredentials: true,\n  timeout: 30000\n}); // 请求拦截\n\nrequest.interceptors.request.use(function (config) {\n  return config;\n});\n/* 响应拦截 */\n\nrequest.interceptors.response.use(function (res) {\n  /*可在这里根据返回的状态码做一些拦截操作*/\n  return res;\n}, function (err) {\n  var code = err.code,\n      message = err.message;\n  return Promise.resolve(err);\n});\nexport default request;",{"version":3,"sources":["D:\\Less\\小罗音乐2.0\\src\\plugins\\request.js"],"names":["axios","request","create","baseURL","withCredentials","timeout","interceptors","use","config","response","res","err","code","message","Promise","resolve"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,IAAMC,OAAO,GAACD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAC,2BADkB;AAE1BC,EAAAA,eAAe,EAAC,IAFU;AAG1BC,EAAAA,OAAO,EAAC;AAHkB,CAAb,CAAd,C,CAOA;;AACAJ,OAAO,CAACK,YAAR,CAAqBL,OAArB,CAA6BM,GAA7B,CAAiC,UAAAC,MAAM,EAAE;AACxC,SAAOA,MAAP;AACA,CAFD;AAIA;;AACAP,OAAO,CAACK,YAAR,CAAqBG,QAArB,CAA8BF,GAA9B,CACE,UAAAG,GAAG,EAAI;AACN;AACC,SAAOA,GAAP;AACD,CAJH,EAIK,UAAAC,GAAG,EAAI;AAAA,MACFC,IADE,GACYD,GADZ,CACFC,IADE;AAAA,MACGC,OADH,GACYF,GADZ,CACGE,OADH;AAEN,SAAOC,OAAO,CAACC,OAAR,CAAgBJ,GAAhB,CAAP;AACH,CAPH;AAWA,eAAeV,OAAf","sourcesContent":["import axios from 'axios'\r\nimport { Message } from 'element-ui'\n\r\nconst request=axios.create({\r\n\tbaseURL:'http://39.106.23.37:3000/',\r\n\twithCredentials:true,\r\n\ttimeout:30000\r\n})\r\n\r\n\r\n// 请求拦截\nrequest.interceptors.request.use(config=>{\r\n\treturn config\r\n} \n)\n/* 响应拦截 */\nrequest.interceptors.response.use(\n  res => {\n   /*可在这里根据返回的状态码做一些拦截操作*/  \n    return res\n  }, err => {\r\n\t  const {code,message}=err\n      return Promise.resolve(err)\n  }\n)\r\n\r\n\nexport default request\r\n\r\n"]}]}